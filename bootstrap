#!/bin/bash

# This file is part of the quickbuild software package.
# 
# quickbuild is free software that is distributed under the free software
# foundation's GNU Affero General Public License (AGPL) version 3.
#
# For more information see the quickbuild package homepage at:
#   https://github.com/lanceman2/quickbuild
#
# You can get the latest version of this file from:
# 
#  https://raw.githubusercontent.com/lanceman2/quickbuild/master/examples/bootstrap_download/bootstrap
#
##############################################################################


# The tag can be "master" or a full git check-in hash in lower case hex
# like for example:
#tag=dc184319be9a272ffa4528f5bb5d0902f1edbbbb
tag=0.1
url=https://raw.githubusercontent.com/lanceman2/quickbuild/$tag/quickbuild.make

# If we wanted a particular file, so we checks it's sha512 sum.
# Run:
#
#    sha512sum quickbuild.make
#
# to get this long hex number


quickbuild_make_sha512sum=4bb12b01391d1c62cc7cebd0705ba2cd5409c8d4e275f4952a120\
2e0b1d442c435b2b9403eeffecbcd85e625325f2337ef60ec176840aa7f0c7a\
e5efc57f1b13


function usage()
{
    cat <<EOF

  Usage: $0

  This bootstrap script downloads and compresses a make file
  from the web via url:

     $url

  We call it bootstrap because you need this make file before
  you can configure and make this package.

EOF
    exit 1
}


[ "$1" = "--help" ] && usage
[ "$1" = "-h" ] && usage

set -ex

# Go to the directory there this script is.
cd $(dirname ${BASH_SOURCE[0]})

if [ -z "$*" ] && [ -e quickbuild.make ] ; then
    set +x
    cat <<EOF

  The file quickbuild.make exists.
  If you wish to regenerate it remove it first.
  Or run

      $0 -f

EOF
    exit 1
fi


set -e
cat <<EOF > quickbuild.make.tmp
# This is a generated file
#
#  You can get the uncompressed and better commented original version
#  of this file from:
#
#      $url
#

EOF


# get the quickbuild.make file from the web
wget $url -O quickbuild.make.org 

if [ -n "$quickbuild_make_sha512sum" ] ; then
    set +x
    # We wanted a particular file, so we checks it's sha512 sum.
    echo "$quickbuild_make_sha512sum  quickbuild.make.org" | sha512sum -c
    set -x
else
    set +x
    echo "The sha512sum of the downloaded quickbuild.make file, before compressing it:"
    set -x
    sha512sum quickbuild.make.org
fi

# strip out comments
sed quickbuild.make.org -e 's/^\s*\#.*$//g' -e '/^$/d' >> quickbuild.make.tmp

rm quickbuild.make.org
mv quickbuild.make.tmp quickbuild.make

# We added the git submodule webtop by running:
#   cd htdocs && git submodule add git@github.com:vtwireless/webtop.git webtop
# or could have used:
#   cd htdocs && git submodule add https://github.com/vtwireless/webtop.git webtop

if [ -d .git ] ; then
    # This is a git repository so:
    # Download submodule(s) with git
    git submodule update --init

else

    # This is not a git repository so:
    # Download submodule(s) without the repository using github's
    # tarball web API.
    #
    source ./GetSrcFromGithub.bash
    tmpf=$(mktemp)
    wget -O $tmpf https://github.com/vtwireless/webtop/tarball/master
    if [ -n "$webtop_sha512sum" ] ; then
        set +x
        # We wanted a particular file, so we checks it's sha512 sum.
        echo "$quickbuild_make_sha512sum  quickbuild.make.org" | sha512sum -c
        set -x
    else
        echo "The sha512sum of the downloaded webtop/tarball file is:"
        set -x
        sha512sum $tmpf
    fi
    # untar without the top directory
    mkdir htdocs/webtop
    tar -xvf $tmpf --strip-components=1 --directory=htdocs/webtop
    rm $tmpf
fi


# patch htdocs/webtop/ for use by this software project.
#
cat << EOF > ./htdocs/webtop/GNUmakefile
# This is a generated file for the use of the crts software project

INSTALL_DIR = \$(PREFIX)/htdocs/webtop

include ../../quickbuild.make
EOF

