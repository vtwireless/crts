#!/bin/bash

# This script is only intended to be run to create files if this source
# came from a git repository, be it from a
# HTTP get request from https://github.com/vtwireless/crts/tarball/master
# or a "git clone https://github.com/vtwireless/crts.git"

# A proper tarball release of this software will contain additional files,
# that are not checked into the git repository, which this script
# generates.


# This file was started from:
# 
#  https://raw.githubusercontent.com/lanceman2/quickbuild/master/examples/bootstrap_download/bootstrap


############################# CONFIGURATION #################################

# The qbtag can be "master" or a full git check-in hash in lower case hex
# like for example:
#qbtag=dc184319be9a272ffa4528f5bb5d0902f1edbbbb
qbtag=0.1
qb_url=https://raw.githubusercontent.com/lanceman2/quickbuild/$qbtag/quickbuild.make

# If we wanted a particular file, so we checks it's sha512 sum.
# Run:
#
#    sha512sum quickbuild.make
#
# to get this long hex number


quickbuild_make_sha512sum=\
4bb12b01391d1c62cc7cebd0705ba2cd5409c8d4e275f4952a120\
2e0b1d442c435b2b9403eeffecbcd85e625325f2337ef60ec1768\
40aa7f0c7ae5efc57f1b13


###########################################################################



function usage()
{
    cat <<EOF

  Usage: $0

  This bootstrap script downloads and compresses a make file
  from the web via url:

     $qb_url

  We call it bootstrap because you need this make file before
  you can configure and make this package.

  This bootstrap script also downloads lots of other files.

EOF
    exit 1
}


[ "$1" = "--help" ] && usage
[ "$1" = "-h" ] && usage

set -ex

# Go to the directory there this script is.
cd $(dirname ${BASH_SOURCE[0]})

if [ -z "$*" ] && [ -e quickbuild.make ] ; then
    set +x
    cat <<EOF

  The file quickbuild.make exists.
  If you wish to regenerate it remove it first.
  Or run

      $0 -f

EOF
    exit 1
fi


set -e
cat <<EOF > quickbuild.make.tmp
# This is a generated file
#
#  You can get the uncompressed and better commented original version
#  of this file from:
#
#      $qb_url
#

EOF


# get the quickbuild.make file from the web
wget $qb_url -O quickbuild.make.org 

if [ -n "$quickbuild_make_sha512sum" ] ; then
    set +x
    # We wanted a particular file, so we checks it's sha512 sum.
    echo "$quickbuild_make_sha512sum  quickbuild.make.org" | sha512sum -c
    set -x
else
    set +x
    echo "The sha512sum of the downloaded quickbuild.make file, before compressing it:"
    set -x
    sha512sum quickbuild.make.org
fi

# strip out comments
sed quickbuild.make.org -e 's/^\s*\#.*$//g' -e '/^$/d' >> quickbuild.make.tmp

rm quickbuild.make.org
mv quickbuild.make.tmp quickbuild.make


# The source to this package requires lots more files in order to build
# it.  It requires files that are part of other projects, so in order to
# not replicate data we do not check them into the crts repository.
#
# https://stackoverflow.com/questions/34719785/how-to-add-submodule-files-to-a-github-release
#
# Hence we can't create a tarball of this package, via the github web API,
# that includes all needed files to build this package.
#
# We have URLs and hashes of the required files in the build scripts in
# this package.

# Note: 'make download' must not be dependent on running ./configure
# or this here will fail.
#
# download a bunch of files:
make download

# Now if you delete this file and all the git repository related files you
# should have a full source release in this top directory.
